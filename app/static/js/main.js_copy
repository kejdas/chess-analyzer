let board = null;
let game = null;
let moves = [];
let moveIndex = 0;

// Funkcja ładująca grę (tak jak masz)
function loadGame(player, date, filename) {
  fetch("/load_game", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ player, date, filename }),
  })
    .then((res) => res.json())
    .then((data) => {
      moves = data;
      game = new Chess();
      moveIndex = 0;
      board.position(game.fen());
      updateInfo();
    })
    .catch((err) => {
      console.error("Failed to load game:", err);
      document.getElementById("info").innerText = "Failed to load game.";
    });
}

// Funkcja do przesuwania się o ruch do przodu
function nextMove() {
  if (moveIndex < moves.length) {
    game.move(moves[moveIndex].move);
    moveIndex++;
    board.position(game.fen());
    updateInfo();
  }
}

// Funkcja do cofania ruchu
function prevMove() {
  if (moveIndex > 0) {
    game.undo();
    moveIndex--;
    board.position(game.fen());
    updateInfo();
  }
}

// Aktualizacja informacji o ruchu
function updateInfo() {
  const info = document.getElementById("info");
  info.innerText = `Move ${moveIndex} / ${moves.length}`;
}

// Inicjalizacja i podpięcie event listenerów
document.addEventListener("DOMContentLoaded", () => {
  board = Chessboard("board", { position: "start", pieceTheme: "/static/img/chesspieces/wikipedia/{piece}.png" });

  document.getElementById("prevBtn").addEventListener("click", prevMove);
  document.getElementById("nextBtn").addEventListener("click", nextMove);

  // Zakładam, że w URL masz player, date, file — załaduj grę automatycznie
  const urlParams = new URLSearchParams(window.location.search);
  const player = urlParams.get("player");
  const date = urlParams.get("date");
  const file = urlParams.get("file");

  if (player && date && file) {
    loadGame(player, date, file);
  }
});

